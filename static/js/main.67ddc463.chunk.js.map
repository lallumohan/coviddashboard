{"version":3,"sources":["header.js","World.js","Updated.js","India.js","vaccine.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","fixed","variant","expand","Container","Brand","href","style","fontFamily","fontWeight","color","Toggle","Collapse","id","Nav","className","to","Loader","class","viewBox","width","height","stroke","d","fill","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","World","state","loading","data","axios","get","then","res","console","log","setState","this","map","itm","ky","country","todayCases","cases","active","recovered","deaths","Component","Updated","props","StateData","mode","as_on","India","filterList","event","updatedList","filter","list","state_name","toLowerCase","search","target","value","TestData","States","key","a","b","arrayCopy","arrInStr","JSON","stringify","sort","compareByAsc","compareByDesc","Newdata","forEach","statename","new_positive","parseInt","positive","new_active","new_cured","new_death","new_case","push","borderColor","boxShadow","borderRadius","fontSize","placeholder","onChange","onClick","sortBy","icon","faSort","filteredName","index","Vaccine","getBeneficiariesGroupBy","time","timestamp","moment","format","topBlock","vaccination","total","tot_dose_1","tot_dose_2","today","item","partial_vaccinated","totally_vaccinated","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67ddc463.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar,Nav,Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"primary\" fixed=\"top\" variant=\"dark\" expand=\"lg\">\r\n  <Container>\r\n    <Navbar.Brand href=\"/india\" style={{fontFamily:'Oswald',fontWeight:500, color:'rgb(52, 224, 30)'}}>COVID 19</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto\">\r\n        <Link className ='nav-link' style={{fontFamily:'Oswald',fontWeight:500}}  to=\"/india\">Home</Link>\r\n        <Link  className='nav-link' style={{fontFamily:'Oswald',fontWeight:500}} to=\"/world\">World</Link>\r\n        <Link  className='nav-link' style={{fontFamily:'Oswald',fontWeight:500}} to=\"/vaccine\">Vaccine</Link>\r\n        \r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n\r\n\r\n      </div>\r\n         \r\n    \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./World.css\"\r\n//const data = this.state.datae[0].country\r\n//if (data == null) return null;\r\n\r\nconst Loader = () => (\r\n  <div class=\"divLoader\">\r\n    <svg class=\"svgLoader\" viewBox=\"0 0 100 100\" width=\"10em\" height=\"10em\">\r\n      <path stroke=\"none\" d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\" fill=\"#51CACC\" transform=\"rotate(179.719 50 51)\"><animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 51;360 50 51\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform></path>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class World extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://disease.sh/v3/covid-19/countries\").then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ data: res.data , loading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <h5 className=\"  mb-5 text-center\">Covid cases Worldwide </h5>\r\n        <h3 className=\"  mt-5 text-center\">Covid cases Worldwide </h3>\r\n        {this.state.loading ? <Loader /> : null}\r\n  \r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"table-responsive \">\r\n            <table className=\"table table-hover table-bordered \">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th>Country</th>\r\n                  <th>New Cases</th>\r\n                  <th>Total Cases</th>\r\n                  <th>Active</th>\r\n                  <th>Recovered</th>\r\n                  <th>Death</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((itm, ky) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{itm.country}</td>\r\n                      <td className=\"text-end\">{itm.todayCases}</td>\r\n                      <td className=\"text-end\">{itm.cases}</td>\r\n                      <td className=\"text-end\">{itm.active}</td>\r\n                      <td className=\"text-end\">{itm.recovered}</td>\r\n                      <td className=\"text-end\">{itm.deaths}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Updated.css';\r\nexport default class Updated extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      StateData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://cors-anywhere.herokuapp.com/https://www.mygov.in/sites/default/files/covid/covid_state_counts_ver1.json\", {mode: \"cors\"})\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ StateData: res.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.StateData.as_on;\r\n       console.log(data)\r\n    {/*\r\n\r\n      if (data == null) return null; */}\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"live-indicator-wrapper\">\r\n        <div className=\"pulse\">    </div> \r\n         <span>Last Updated:{data} </span>\r\n         \r\n\r\n        </div>\r\n    \r\n       \r\n        \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport  './india.css'\r\nimport Updated from \"./Updated\";\r\n\r\nexport default class India extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      StateData: [],\r\n      TestData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://www.mohfw.gov.in/data/datanew.json\").then((res) => {\r\n      console.log(res.data);\r\n      const States = res.data;\r\n      this.setState({ StateData: States,TestData: res.data  });\r\n    });\r\n  }\r\n\r\n  compareByAsc(key) {\r\n    return function(a, b) {\r\n      if (a[key]  < b[key] ) return -1;\r\n      if (a[key] > b[key] ) return 1;\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  compareByDesc(key) {\r\n    return function(a, b) {\r\n      if (a[key]  < b[key] ) return 1;\r\n      if (a[key] > b[key] ) return -1;\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  sortBy(key) {\r\n    let arrayCopy = [...this.state.TestData.filter((itm, ky) => ky < 36)];\r\n    const arrInStr = JSON.stringify(arrayCopy);\r\n    arrayCopy.sort(this.compareByAsc(key));\r\n    const arrInStr1 = JSON.stringify(arrayCopy);\r\n    if (arrInStr === arrInStr1) {\r\n      arrayCopy.sort(this.compareByDesc(key));\r\n    }\r\n    \r\n    this.setState({ TestData : arrayCopy });\r\n  }\r\n\r\n\r\n\r\n  filterList = (event) => {\r\n    var updatedList = this.state.StateData;\r\n    updatedList = updatedList.filter(function(list) {\r\n      return (\r\n        list.state_name.toLowerCase().search(event.target.value.toLowerCase()) !==\r\n        -1\r\n      );\r\n    });\r\n    this.setState({\r\n      TestData: updatedList\r\n    });\r\n    }; \r\n\r\n\r\n  render() {\r\n    var Newdata =[]\r\n    var data = this.state.StateData[36];\r\n     //if (data == null) return (<div> Loading</div> );\r\n    var stat = this.state.StateData.filter((itm, ky) => ky < 36)\r\n    console.log(this.state.TestData)\r\n    this.state.TestData.filter((itm, ky) => ky < 36).forEach(statename => {\r\n      statename.new_positive =  parseInt(statename.new_positive)\r\n      statename.positive =  parseInt(statename.positive)\r\n      statename.new_active =  parseInt(statename.new_active) \r\n      statename.new_cured =  parseInt(statename.new_cured) \r\n      statename.new_death =  parseInt(statename.new_death)     \r\n      statename.new_case = parseInt(statename.new_positive) - parseInt(statename.positive) ;\r\n      Newdata.push(statename)\r\n  \r\n  })\r\n\r\n     \r\n     \r\n    return (\r\n    \r\n      <div>\r\n        <div className=\"container-fluid mt-5\">\r\n         <div className= \" mt-2\" >  </div> \r\n\r\n        <div className=\"row mt-3 \">\r\n\r\n        <Updated/>\r\n                    \r\n                    \r\n            \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#dc3545 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>New Cases</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}> { parseInt(data?.new_positive)-parseInt(data?.positive) }</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\"></h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#4cd97a 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Active Cases</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{ data && data.new_active ? <div>  {data.new_active} </div> : <div>  No data </div> }</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\"></h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card  text-center\" style={{boxShadow: '#4db5ff 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 class=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400, color:'rgb(52, 224, 30)'}}>Total Cases</h4>\r\n                          <h1 class=\"card-title\" style={{fontFamily:'Rubik',fontWeight:700,}}>{data?.new_positive }</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\"></h6>\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#ffc107 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Deaths</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700  }}> {data?.new_death}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\"></h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                \r\n</div>        \r\n <div className=\"search-wrap mt-4\">\r\n   \r\n <input type=\"text\" placeholder=\"Search State \" onChange={this.filterList}/>\r\n </div>\r\n     \r\n          <div className=\" table-responsive mt-4 \">\r\n            <table className=\"table table-bordered table-hover  \">\r\n              <thead>\r\n                <tr  className=\"text-center\">\r\n                  <th style={{ color:'#393b3e'}}  onClick={() => this.sortBy(\"state_name\")}>Country<br/> <FontAwesomeIcon icon={faSort}  /> </th>\r\n                  <th style={{ color:'#8050b1'}}onClick={() => this.sortBy(\"new_case\")} >New Cases <br/><FontAwesomeIcon icon={faSort} /></th>\r\n                  <th style={{ color:'#De6605'}} onClick={() => this.sortBy(\"new_positive\")}>Total Cases <br/> <FontAwesomeIcon icon={faSort} /></th>\r\n                  <th style={{ color:'#246bfd'}}  onClick={() => this.sortBy(\"new_active\")}>Active <br/> <FontAwesomeIcon icon={faSort} /></th>\r\n                  <th style={{ color:'#189a54'}} onClick={() => this.sortBy(\"new_cured\")}>Recovered<br/> <FontAwesomeIcon icon={faSort}/></th>\r\n                  <th style={{ color:'#Fd3052'}} onClick={() => this.sortBy(\"new_death\")}>Death <br/><FontAwesomeIcon icon={faSort}  /></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { Newdata.map((filteredName, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td className=\" p-1\" style= {{width: \"20%\"}}>{filteredName.state_name}</td>\r\n                      <td className=\"text-end p-1 \" >{filteredName.new_case}</td>\r\n                      <td className=\"text-end p-1\">{filteredName.new_positive}</td>\r\n                      <td className=\"text-end p-1\">{filteredName.new_active}</td>\r\n                      <td className=\"text-end p-1\">{filteredName.new_cured}</td>\r\n                      <td className=\"text-end p-1\">{filteredName.new_death}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n  \r\n          <div>\r\n            {/* { this.state.StateData.reduce((carry, item)=> parseInt(item.new_positive)  > parseInt (carry.new_positive) ? item : carry)}\r\n          \r\n              <h1>hahhdhd</h1> */}\r\n           {/*\r\n\r\n          {stat.reduce((prev, current)=> (parseInt(prev.new_positive)  > parseInt (current.new_positive)) ? prev : current ,0).new_positive}\r\n          {stat.reduce((prev, current)=> (parseInt(prev.new_positive)  > parseInt (current.new_positive)) ? prev : current, 0).state_name}\r\n           \r\n<br/> \r\n           {stat.reduce((prev, current)=> (parseInt(prev.new_death)  > parseInt (current.new_death)) ? prev : current, 0).new_death}\r\n           {stat.reduce((prev, current)=> (parseInt(prev.new_death)  > parseInt (current.new_death)) ? prev : current, 0).state_name}\r\n\r\n           {stat.reduce((prev,current) => ((prev.new_positive-prev.positive)  > (current.new_positive-current.positive) ) ? prev : current,0 ).state_name}\r\n           {stat.reduce((prev,current) => ((prev.new_positive-prev.positive)  > (current.new_positive-current.positive) ) ? prev : current,0 ).new_positive - \r\n           \r\n           stat.reduce((prev,current) => ((prev.new_positive-prev.positive)  > (current.new_positive-current.positive) ) ? prev : current,0 ).positive}\r\n           */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n//import  './vaccine.css'\r\n\r\nconst Loader = () => (\r\n  <div class=\"divLoader\">\r\n    <svg class=\"svgLoader\" viewBox=\"0 0 100 100\" width=\"10em\" height=\"10em\">\r\n      <path stroke=\"none\" d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\" fill=\"#51CACC\" transform=\"rotate(179.719 50 51)\"><animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 51;360 50 51\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform></path>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\n\r\nexport default class Vaccine extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      StateData: [],\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports\").then((res) => {\r\n      console.log(res.data);\r\n      const States = res.data;\r\n      this.setState({ StateData: States , loading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var data = this.state.StateData.getBeneficiariesGroupBy;\r\n    \r\n    {/*\r\n\r\n      if (data == null) return null;\r\n    var x_sum = this.state.StateData.getBeneficiariesGroupBy.reduce((acc, curr) => acc + curr.totally_vaccinated, 0);\r\n    \r\n  {x_sum}\r\n  */}\r\n\r\n    \r\n    \r\n    let time =  this.state.StateData.timestamp\r\n    \r\n\r\n     \r\n     \r\n    return (\r\n    \r\n      <div>\r\n        <div className=\"container-fluid mt-5\">\r\n\r\n        {this.state.loading ? <Loader /> : null}\r\n\r\n        <div className=\"row mt-5 \">\r\n        <div className=\"live-indicator-wrapper\">\r\n        <div className=\"pulse\">    </div> \r\n        \r\n         <span>Last Updated: {moment(time).format(' h:mm a , MMMM Do YYYY')}</span>\r\n\r\n        </div>\r\n    \r\n                    \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card  text-center\" style={{boxShadow: '#4db5ff 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 class=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400, color:'rgb(52, 224, 30)'}}>Total Vaccinations</h4>\r\n                          <h1 class=\"card-title\" style={{fontFamily:'Rubik',fontWeight:700,fontSize: \"3rem\"}}>{this.state.StateData.topBlock?.vaccination?.total ||0}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n            \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#dc3545 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Dose 1</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock?.vaccination?.tot_dose_1 ||0}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#4cd97a 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Dose 2</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock?.vaccination?.tot_dose_2 ||0}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                \r\n                    <div className=\"col-md-6 mt-4\">\r\n                      <div class=\"card text-center\"  style={{borderColor :'rgb(52, 224, 30)',boxShadow: '#ffc107 0 .125rem 0.8rem',borderRadius: '1rem',borderColor :'rgb(52, 224, 30)' }}> \r\n                        <div class=\"card-body\">\r\n                          <h4 className=\"card-title mb-5\" style={{fontFamily:'Rubik',fontWeight:400 }}>Today Vaccination</h4>\r\n                          <h1 class=\"card-title \" style={{fontFamily:'Rubik',fontWeight:700 ,fontSize: \"3rem\" }}>{this.state.StateData.topBlock?.vaccination?.today ||0}</h1>\r\n                          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                    \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n    \r\n                \r\n</div>        \r\n      <div className=\"mt-4\"></div>\r\n\r\n          <div className=\"table-responsive \">\r\n            <table data- className=\"table table-hover table-bordered\">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th>STATE/UT</th>\r\n                  <th>TOTAL VACCINATIONS</th>\r\n                  <th>PARTIALLY VACCINATED</th>\r\n                  <th>FULLY VACCINATED</th>\r\n                  <th>VACCINATION TODAY</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {data?.map((item, key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{item.state_name}</td>\r\n                      <td className=\"text-end\">{item.total}</td>\r\n                      <td className=\"text-end\">{item.partial_vaccinated}</td>\r\n                      <td className=\"text-end\">{item.totally_vaccinated}</td>\r\n                      <td className=\"text-end\">{item.today}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n  \r\n          \r\n    \r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Testtrack from './testtrack.js';\r\nimport Statewise from './Statewise';\r\n//import Teste from './teste.js';\r\nimport Cards from './cards.js';\r\nimport Header from './header.js';\r\nimport World from './World.js';\r\nimport India from './India.js';\r\nimport Vaccine from './vaccine.js';\r\nimport Updated from './Updated.js';\r\n\r\n\r\nimport {HashRouter as Router,\r\n    Link ,\r\n    Switch, Route\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header/> \r\n                <Switch>\r\n                  <Route exact path=\"/\">\r\n                      \r\n                      <India/>\r\n                   </Route>\r\n                  <Route path=\"/india\">\r\n                      \r\n                      <India/>\r\n\r\n                  </Route>\r\n                 <Route path=\"/world\">\r\n                     \r\n                     <World/>\r\n                        \r\n                 </Route>\r\n                 <Route path=\"/vaccine\">\r\n                     \r\n                     <Vaccine/>\r\n                        \r\n                 </Route>\r\n                </Switch>\r\n\r\n\r\n        </Router>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Statewise from './Statewise';\n//import Testtrack from './testtrack.js';\n//<Testtrack />\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}